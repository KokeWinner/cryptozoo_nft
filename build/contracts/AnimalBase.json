{
  "contractName": "AnimalBase",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "animalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "matronId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sireId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Species",
          "name": "species",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "genes",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "generation",
          "type": "uint8"
        }
      ],
      "name": "Birth",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "animalIndexToApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "animalIndexToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "animals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "genes",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "matronId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sireId",
          "type": "uint256"
        },
        {
          "internalType": "enum Species",
          "name": "species",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "generation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cooAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cooldowns",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleAuction",
      "outputs": [
        {
          "internalType": "contract SaleClockAuction",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCOO",
          "type": "address"
        }
      ],
      "name": "setCOO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sireAllowedToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"animalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"matronId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sireId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Species\",\"name\":\"species\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"genes\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"generation\",\"type\":\"uint8\"}],\"name\":\"Birth\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"animalIndexToApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"animalIndexToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"animals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"genes\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"matronId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sireId\",\"type\":\"uint256\"},{\"internalType\":\"enum Species\",\"name\":\"species\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"generation\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cfoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cooldowns\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleAuction\",\"outputs\":[{\"internalType\":\"contract SaleClockAuction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCFO\",\"type\":\"address\"}],\"name\":\"setCFO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCOO\",\"type\":\"address\"}],\"name\":\"setCOO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sireAllowedToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Birth(address,uint256,uint256,uint256,uint8,uint8,uint8)\":{\"details\":\"The Birth event is fired whenever a new kitten comes into existence. This obviously  includes any time a animal is created through the giveBirth method, but it is also called  when a new gen0 animal is created.\"}},\"kind\":\"dev\",\"methods\":{\"pause()\":{\"details\":\"Called by any \\\"C-level\\\" role to pause the contract. Used only when  a bug or exploit is detected and we need to limit damage.\"},\"setCEO(address)\":{\"details\":\"Assigns a new address to act as the CEO. Only available to the current CEO.\",\"params\":{\"_newCEO\":\"The address of the new CEO\"}},\"setCFO(address)\":{\"details\":\"Assigns a new address to act as the CFO. Only available to the current CEO.\",\"params\":{\"_newCFO\":\"The address of the new CFO\"}},\"setCOO(address)\":{\"details\":\"Assigns a new address to act as the COO. Only available to the current CEO.\",\"params\":{\"_newCOO\":\"The address of the new COO\"}},\"unpause()\":{\"details\":\"Unpauses the smart contract. Can only be called by the CEO, since  one reason we may pause the contract is when CFO or COO accounts are  compromised.\"}},\"stateVariables\":{\"animalIndexToApproved\":{\"details\":\"A mapping from AddressIDs to an address that has been approved to call  transferFrom(). Each Address can only have one approved address for transfer  at any time. A zero value means no approval is outstanding.\"},\"animalIndexToOwner\":{\"details\":\"A mapping from animal IDs to the address that owns them. All animals have  some valid owner address, even gen0 animals are created with a non-zero owner.\"},\"cooldowns\":{\"details\":\"A lookup table indianimaling the cooldown duration after any successful  breeding action, called \\\"pregnancy time\\\" for matrons and \\\"siring cooldown\\\"  for sires. Designed such that the cooldown roughly doubles each time a animal  is bred, encouraging owners not to just keep breeding the same animal over  and over again. Caps out at one week (a animal can breed an unbounded number  of times, and the maximum cooldown is always seven days).\"},\"saleAuction\":{\"details\":\"The address of the ClockAuction contract that handles sales of Kitties. This  same contract handles both peer-to-peer sales as well as the gen0 sales which are  initiated every 15 minutes.\"},\"sireAllowedToAddress\":{\"details\":\"A mapping from AddressIDs to an address that has been approved to use  this Address for siring via breedWith(). Each Address can only have one approved  address for siring at any time. A zero value means no approval is outstanding.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/AnimalBase.sol\":\"AnimalBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/AnimalBase.sol\":{\"keccak256\":\"0x9a15a1d6a512bc6cea92a8701fa1e1334f4f48567129259276785a67cf07f621\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c32393570a9a2e90eba772287d85ea6135bb995b8e692abf759cda3276941d30\",\"dweb:/ipfs/QmRuuSRrQ3t73ezdYtNnJUZuCJka3veRCvp89EM35fGTg4\"]},\"/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/AnimalControl.sol\":{\"keccak256\":\"0x41af25c9c4bc39bcf77a6dbc8dd057a9c68f7aeb9eaf8aa56b9b4c8dd29acfda\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c03fe6b925ebc4e7b1d8b1cee6627be6d9d015bf673022987de25db49684306\",\"dweb:/ipfs/QmZ3y3YetFbZ9bqFtY69gDtXHMvhetmRfr6dyGvrDqrDTa\"]},\"/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/ClockAuction.sol\":{\"keccak256\":\"0x0b4d32f9d939ab0a682d381e094b8d89937e8b88854d1740c4761afff46f985b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://00a6236422356a53beaede841f5275657b6524cfe81bc97cdf3dd9311e677465\",\"dweb:/ipfs/QmQ6mQChEBLwJZBtmNfV78RQefgxv6gvCjcan4SgAQeuFY\"]},\"/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/ClockAuctionBase.sol\":{\"keccak256\":\"0xc5f4ad71b642983e6adac3e9bd5a261db5c0e1b7b96464a5f4062a96db5283e6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9ab733395e9142fe9c28d0b328ed70fb6f47504b02ce93caf2895eac52d5b0be\",\"dweb:/ipfs/QmRormyDq7Tp8wNXBNmNz1RVfukgBcUPMCGPZ2SyiJrerW\"]},\"/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/SaleClockAuction.sol\":{\"keccak256\":\"0xada3aa0d6093e8dae17d03bec96071ff76ccb210ba88d54fd353faf364c0476e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://edf47f4b5c31eb1560dc003a2a48f1616f9d782c5f938584d7dd29a7623859b6\",\"dweb:/ipfs/QmeGrX4FkZ8NtoxRiV5rCCHHqdv4aSLjBJRtqw4stZBJs6\"]},\"/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/animals.sol\":{\"keccak256\":\"0xd93816e317e1c6d39cfc3d90ab35e8cdcf407e7a3ea314d456b033d678fcee10\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ee42bfeb4ca9540c9b8e850c41c65dac42d8c7b61e172622eaa7a73b7e14803c\",\"dweb:/ipfs/QmVt84YUw9TFP6vA4KvcP5kjEF6mE7h8itg76Nvw8Kqn3X\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c\",\"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600260146101000a81548160ff0219169083151502179055506040518060a0016040528061384063ffffffff1663ffffffff1681526020016201518063ffffffff1663ffffffff1681526020016203f48063ffffffff1663ffffffff16815260200162093a8063ffffffff1663ffffffff16815260200162278d0063ffffffff1663ffffffff1681525060039060056100a09291906100b8565b50600f6005553480156100b257600080fd5b50610178565b82600e60070160089004810192821561014a5791602002820160005b8382111561011857835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026100d4565b80156101485782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610118565b505b509050610157919061015b565b5090565b5b8082111561017457600081600090555060010161015c565b5090565b610c5c806101876000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637a7d4937116100975780639d6fac6f116100665780639d6fac6f14610279578063b047fb50146102a9578063b2c07292146102c7578063e6cbe351146102f757610100565b80637a7d4937146101ed5780638456cb591461020b57806398cf8ae614610215578063998dd3ca1461024557610100565b80633f4ba83a116100d35780633f4ba83a1461017957806346116e6f146101835780634e0a3379146101b35780635c975abb146101cf57610100565b80630519ce79146101055780630a0f81681461012357806327d7874c146101415780632ba73c151461015d575b600080fd5b61010d610315565b60405161011a9190610a2d565b60405180910390f35b61012b61033b565b6040516101389190610a2d565b60405180910390f35b61015b60048036038101906101569190610972565b61035f565b005b61017760048036038101906101729190610972565b610434565b005b61018161050a565b005b61019d6004803603810190610198919061099b565b610598565b6040516101aa9190610a2d565b60405180910390f35b6101cd60048036038101906101c89190610972565b6105cb565b005b6101d76106a1565b6040516101e49190610a48565b60405180910390f35b6101f56106b4565b6040516102029190610a7e565b60405180910390f35b6102136106ba565b005b61022f600480360381019061022a919061099b565b6107f9565b60405161023c9190610a2d565b60405180910390f35b61025f600480360381019061025a919061099b565b61082c565b604051610270959493929190610ab4565b60405180910390f35b610293600480360381019061028e919061099b565b610899565b6040516102a09190610a99565b60405180910390f35b6102b16108c9565b6040516102be9190610a2d565b60405180910390f35b6102e160048036038101906102dc919061099b565b6108ef565b6040516102ee9190610a2d565b60405180910390f35b6102ff610922565b60405161030c9190610a63565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103f157600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104c657600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056257600080fd5b600260149054906101000a900460ff1661057b57600080fd5b6000600260146101000a81548160ff021916908315150217905550565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561065d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1681565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610761575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806107b95750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107c257600080fd5b600260149054906101000a900460ff16156107dc57600080fd5b6001600260146101000a81548160ff021916908315150217905550565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006818154811061083c57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900460ff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b600381600e81106108a957600080fd5b60089182820401919006600402915054906101000a900463ffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061095781610bf8565b92915050565b60008135905061096c81610c0f565b92915050565b60006020828403121561098457600080fd5b600061099284828501610948565b91505092915050565b6000602082840312156109ad57600080fd5b60006109bb8482850161095d565b91505092915050565b6109cd81610b07565b82525050565b6109dc81610b19565b82525050565b6109eb81610b7f565b82525050565b6109fa81610ba3565b82525050565b610a0981610b58565b82525050565b610a1881610b62565b82525050565b610a2781610b72565b82525050565b6000602082019050610a4260008301846109c4565b92915050565b6000602082019050610a5d60008301846109d3565b92915050565b6000602082019050610a7860008301846109e2565b92915050565b6000602082019050610a936000830184610a00565b92915050565b6000602082019050610aae6000830184610a0f565b92915050565b600060a082019050610ac96000830188610a1e565b610ad66020830187610a00565b610ae36040830186610a00565b610af060608301856109f1565b610afd6080830184610a1e565b9695505050505050565b6000610b1282610b38565b9050919050565b60008115159050919050565b6000819050610b3382610be4565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b6000610b8a82610b91565b9050919050565b6000610b9c82610b38565b9050919050565b6000610bae82610b25565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60118110610bf557610bf4610bb5565b5b50565b610c0181610b07565b8114610c0c57600080fd5b50565b610c1881610b58565b8114610c2357600080fd5b5056fea26469706673582212201467e0043883bc035a0db65b3c003d8eee5e7baeb3967a1bcf981e9f6921643364736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80637a7d4937116100975780639d6fac6f116100665780639d6fac6f14610279578063b047fb50146102a9578063b2c07292146102c7578063e6cbe351146102f757610100565b80637a7d4937146101ed5780638456cb591461020b57806398cf8ae614610215578063998dd3ca1461024557610100565b80633f4ba83a116100d35780633f4ba83a1461017957806346116e6f146101835780634e0a3379146101b35780635c975abb146101cf57610100565b80630519ce79146101055780630a0f81681461012357806327d7874c146101415780632ba73c151461015d575b600080fd5b61010d610315565b60405161011a9190610a2d565b60405180910390f35b61012b61033b565b6040516101389190610a2d565b60405180910390f35b61015b60048036038101906101569190610972565b61035f565b005b61017760048036038101906101729190610972565b610434565b005b61018161050a565b005b61019d6004803603810190610198919061099b565b610598565b6040516101aa9190610a2d565b60405180910390f35b6101cd60048036038101906101c89190610972565b6105cb565b005b6101d76106a1565b6040516101e49190610a48565b60405180910390f35b6101f56106b4565b6040516102029190610a7e565b60405180910390f35b6102136106ba565b005b61022f600480360381019061022a919061099b565b6107f9565b60405161023c9190610a2d565b60405180910390f35b61025f600480360381019061025a919061099b565b61082c565b604051610270959493929190610ab4565b60405180910390f35b610293600480360381019061028e919061099b565b610899565b6040516102a09190610a99565b60405180910390f35b6102b16108c9565b6040516102be9190610a2d565b60405180910390f35b6102e160048036038101906102dc919061099b565b6108ef565b6040516102ee9190610a2d565b60405180910390f35b6102ff610922565b60405161030c9190610a63565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103f157600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104c657600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056257600080fd5b600260149054906101000a900460ff1661057b57600080fd5b6000600260146101000a81548160ff021916908315150217905550565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561065d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1681565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610761575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806107b95750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107c257600080fd5b600260149054906101000a900460ff16156107dc57600080fd5b6001600260146101000a81548160ff021916908315150217905550565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006818154811061083c57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900460ff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b600381600e81106108a957600080fd5b60089182820401919006600402915054906101000a900463ffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061095781610bf8565b92915050565b60008135905061096c81610c0f565b92915050565b60006020828403121561098457600080fd5b600061099284828501610948565b91505092915050565b6000602082840312156109ad57600080fd5b60006109bb8482850161095d565b91505092915050565b6109cd81610b07565b82525050565b6109dc81610b19565b82525050565b6109eb81610b7f565b82525050565b6109fa81610ba3565b82525050565b610a0981610b58565b82525050565b610a1881610b62565b82525050565b610a2781610b72565b82525050565b6000602082019050610a4260008301846109c4565b92915050565b6000602082019050610a5d60008301846109d3565b92915050565b6000602082019050610a7860008301846109e2565b92915050565b6000602082019050610a936000830184610a00565b92915050565b6000602082019050610aae6000830184610a0f565b92915050565b600060a082019050610ac96000830188610a1e565b610ad66020830187610a00565b610ae36040830186610a00565b610af060608301856109f1565b610afd6080830184610a1e565b9695505050505050565b6000610b1282610b38565b9050919050565b60008115159050919050565b6000819050610b3382610be4565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b6000610b8a82610b91565b9050919050565b6000610b9c82610b38565b9050919050565b6000610bae82610b25565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60118110610bf557610bf4610bb5565b5b50565b610c0181610b07565b8114610c0c57600080fd5b50565b610c1881610b58565b8114610c2357600080fd5b5056fea26469706673582212201467e0043883bc035a0db65b3c003d8eee5e7baeb3967a1bcf981e9f6921643364736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5402:17",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:17"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:17",
                "type": ""
              }
            ],
            "src": "7:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:17"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:17",
                "type": ""
              }
            ],
            "src": "152:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:17",
                "type": ""
              }
            ],
            "src": "297:262:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "631:196:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "677:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "686:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "679:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "679:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "679:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "652:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "661:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "644:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "641:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "703:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "718:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "732:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "722:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "747:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "782:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "793:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "778:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "778:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "802:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "757:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "747:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "601:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "612:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "624:6:17",
                "type": ""
              }
            ],
            "src": "565:262:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "898:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "915:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "938:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "920:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "920:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "908:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "908:37:17"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "886:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "893:3:17",
                "type": ""
              }
            ],
            "src": "833:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1016:50:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1033:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1053:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1038:14:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1038:21:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1026:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1026:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1026:34:17"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1004:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1011:3:17",
                "type": ""
              }
            ],
            "src": "957:109:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:91:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1179:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1240:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_SaleClockAuction_$1213_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1184:55:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1184:62:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1172:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:75:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1172:75:17"
                }
              ]
            },
            "name": "abi_encode_t_contract$_SaleClockAuction_$1213_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1150:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1157:3:17",
                "type": ""
              }
            ],
            "src": "1072:181:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1334:76:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1351:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1397:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Species_$1233_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1356:40:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1356:47:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1344:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1344:60:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1344:60:17"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Species_$1233_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1322:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1329:3:17",
                "type": ""
              }
            ],
            "src": "1259:151:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1498:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1521:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1503:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1503:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1491:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1491:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1491:37:17"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1469:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1476:3:17",
                "type": ""
              }
            ],
            "src": "1416:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1603:52:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1620:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1642:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "1625:16:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1625:23:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1613:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1613:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1613:36:17"
                }
              ]
            },
            "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1591:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1598:3:17",
                "type": ""
              }
            ],
            "src": "1540:115:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1722:51:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1739:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1760:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1744:15:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1744:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1732:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:35:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1732:35:17"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1710:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1717:3:17",
                "type": ""
              }
            ],
            "src": "1661:112:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1887:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1899:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1910:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1895:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1895:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1887:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1967:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1980:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1991:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1976:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1976:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1923:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1923:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1923:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1849:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1861:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1872:4:17",
                "type": ""
              }
            ],
            "src": "1779:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2099:118:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2109:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2121:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2132:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2117:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2117:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2109:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2183:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2196:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2207:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2192:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2192:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2145:37:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2145:65:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2145:65:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2071:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2083:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2094:4:17",
                "type": ""
              }
            ],
            "src": "2007:210:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2346:149:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2356:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2368:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2379:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2364:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2364:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2356:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2461:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2474:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2485:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2470:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2470:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_SaleClockAuction_$1213_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2392:68:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2392:96:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2392:96:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_SaleClockAuction_$1213__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2318:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2330:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2341:4:17",
                "type": ""
              }
            ],
            "src": "2223:272:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2599:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2609:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2621:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2632:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2617:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2617:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2609:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2689:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2702:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2713:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2698:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2698:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2645:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2645:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2645:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2571:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2583:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2594:4:17",
                "type": ""
              }
            ],
            "src": "2501:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2825:122:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2835:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2847:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2858:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2843:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2843:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2835:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2913:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2926:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2937:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2922:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2922:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2871:41:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2871:69:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2871:69:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2797:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2809:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2820:4:17",
                "type": ""
              }
            ],
            "src": "2729:218:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3165:456:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3175:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3187:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3198:3:17",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3183:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3183:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3175:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3252:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3265:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3276:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3261:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3261:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3212:39:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:67:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3212:67:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3333:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3346:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3357:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3342:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3342:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3289:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3289:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3289:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3415:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3428:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3439:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3424:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3424:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3371:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3371:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3371:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3507:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3520:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3531:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3516:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3516:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Species_$1233_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3453:53:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3453:82:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3453:82:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "3585:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3598:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3609:3:17",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3594:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3594:19:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3545:39:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3545:69:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3545:69:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_enum$_Species_$1233_t_uint8__to_t_uint8_t_uint256_t_uint256_t_uint8_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3105:9:17",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3117:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3125:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3133:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3141:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3149:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3160:4:17",
                "type": ""
              }
            ],
            "src": "2953:668:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3672:51:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3682:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3711:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3693:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3693:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3682:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3654:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3664:7:17",
                "type": ""
              }
            ],
            "src": "3627:96:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3771:48:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3781:32:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3806:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3799:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3799:13:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3792:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3792:21:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3781:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3753:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3763:7:17",
                "type": ""
              }
            ],
            "src": "3729:90:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3882:78:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3892:16:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3903:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3892:7:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3948:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Species_$1233",
                      "nodeType": "YulIdentifier",
                      "src": "3909:38:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3909:45:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3909:45:17"
                }
              ]
            },
            "name": "cleanup_t_enum$_Species_$1233",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3864:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3874:7:17",
                "type": ""
              }
            ],
            "src": "3825:135:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4011:81:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4021:65:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4036:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4043:42:17",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4032:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4032:54:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4021:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3993:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4003:7:17",
                "type": ""
              }
            ],
            "src": "3966:126:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4143:32:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4153:16:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4164:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4153:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4125:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4135:7:17",
                "type": ""
              }
            ],
            "src": "4098:77:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4225:49:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4235:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4250:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4257:10:17",
                        "type": "",
                        "value": "0xffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4246:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4246:22:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4235:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4207:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4217:7:17",
                "type": ""
              }
            ],
            "src": "4181:93:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4323:43:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4333:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4348:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4355:4:17",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4344:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4344:16:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4333:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4305:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4315:7:17",
                "type": ""
              }
            ],
            "src": "4280:86:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4457:91:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4467:75:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4536:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_SaleClockAuction_$1213_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4480:55:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4480:62:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4467:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_SaleClockAuction_$1213_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4437:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4447:9:17",
                "type": ""
              }
            ],
            "src": "4372:176:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4639:53:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4649:37:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4680:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4662:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4662:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4649:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_SaleClockAuction_$1213_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4619:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4629:9:17",
                "type": ""
              }
            ],
            "src": "4554:138:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4768:65:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4778:49:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4821:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Species_$1233",
                      "nodeType": "YulIdentifier",
                      "src": "4791:29:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4791:36:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4778:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Species_$1233_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4748:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4758:9:17",
                "type": ""
              }
            ],
            "src": "4698:135:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4867:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4884:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4887:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4877:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4877:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4877:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4981:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4984:4:17",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4974:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4974:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4974:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5005:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5008:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4998:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4998:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4998:15:17"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "4839:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5080:63:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5115:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "5117:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5117:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5117:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5103:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5110:2:17",
                            "type": "",
                            "value": "17"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5100:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5100:13:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5093:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5093:21:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5090:2:17"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Species_$1233",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5073:5:17",
                "type": ""
              }
            ],
            "src": "5025:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5192:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5249:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5258:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5261:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5251:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5251:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5251:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5215:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5240:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5222:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5222:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5212:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5212:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5205:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5205:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5202:2:17"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5185:5:17",
                "type": ""
              }
            ],
            "src": "5149:122:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5320:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5377:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5386:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5389:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5379:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5379:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5379:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5343:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5368:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5350:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5350:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5340:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5340:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5333:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5333:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5330:2:17"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5313:5:17",
                "type": ""
              }
            ],
            "src": "5277:122:17"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_SaleClockAuction_$1213_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_SaleClockAuction_$1213_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_Species_$1233_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Species_$1233_to_t_uint8(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_SaleClockAuction_$1213__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_SaleClockAuction_$1213_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_enum$_Species_$1233_t_uint8__to_t_uint8_t_uint256_t_uint256_t_uint8_t_uint8__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_Species_$1233_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Species_$1233(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Species_$1233(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_contract$_SaleClockAuction_$1213_to_t_address(value) -> converted {\n        converted := convert_t_contract$_SaleClockAuction_$1213_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_SaleClockAuction_$1213_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_Species_$1233_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Species_$1233(value)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Species_$1233(value) {\n        if iszero(lt(value, 17)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "151:3012:0:-:0;;;404:5:1;383:26;;;;;;;;;;;;;;;;;;;;1489:158:0;;;;;;;;1536:7;1489:158;;;;;;;;1561:6;1489:158;;;;;;;;1585:6;1489:158;;;;;;;;1609:6;1489:158;;;;;;;;1633:7;1489:158;;;;;;;;;;;;;;;:::i;:::-;;1764:2;1731:35;;151:3012;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "151:3012:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;220:25:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;189;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1172:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1718;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2724:126;;;:::i;:::-;;2840:56:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1445:128:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;383:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1731:35:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2355:81:1;;;:::i;:::-;;2010:54:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1805:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1489:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;251:25:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2515:57:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3125:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:25:1;;;;;;;;;;;;;:::o;189:::-;;;;;;;;;;;;:::o;1172:128::-;523:10;;;;;;;;;;509:24;;:10;:24;;;501:33;;;;;;1259:1:::1;1240:21;;:7;:21;;;;1232:30;;;::::0;::::1;;1286:7;1273:10;::::0;:20:::1;;;;;;;;;;;;;;;;;;1172:128:::0;:::o;1718:::-;523:10;;;;;;;;;;509:24;;:10;:24;;;501:33;;;;;;1805:1:::1;1786:21;;:7;:21;;;;1778:30;;;::::0;::::1;;1832:7;1819:10;;:20;;;;;;;;;;;;;;;;;;1718:128:::0;:::o;2724:126::-;523:10;;;;;;;;;;509:24;;:10;:24;;;501:33;;;;;;2177:6:::1;;;;;;;;;;;2169:15;;;::::0;::::1;;2838:5:::2;2829:6;;:14;;;;;;;;;;;;;;;;;;2724:126::o:0;2840:56:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;1445:128:1:-;523:10;;;;;;;;;;509:24;;:10;:24;;;501:33;;;;;;1532:1:::1;1513:21;;:7;:21;;;;1505:30;;;::::0;::::1;;1559:7;1546:10;;:20;;;;;;;;;;;;;;;;;;1445:128:::0;:::o;383:26::-;;;;;;;;;;;;;:::o;1731:35:0:-;;;;:::o;2355:81:1:-;909:10;;;;;;;;;;;895:24;;:10;:24;;;:64;;;;949:10;;;;;;;;;;935:24;;:10;:24;;;895:64;:104;;;;989:10;;;;;;;;;;;975:24;;:10;:24;;;895:104;874:135;;;;;;2036:6:::1;;;;;;;;;;;2035:7;2027:16;;;::::0;::::1;;2425:4:::2;2416:6;;:13;;;;;;;;;;;;;;;;;;2355:81::o:0;2010:54:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;1805:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1489:158::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;251:25:1:-;;;;;;;;;;;;;:::o;2515:57:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;3125:35::-;;;;;;;;;;;;;:::o;7:139:17:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;624:6;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:109::-;1038:21;1053:5;1038:21;:::i;:::-;1033:3;1026:34;1016:50;;:::o;1072:181::-;1184:62;1240:5;1184:62;:::i;:::-;1179:3;1172:75;1162:91;;:::o;1259:151::-;1356:47;1397:5;1356:47;:::i;:::-;1351:3;1344:60;1334:76;;:::o;1416:118::-;1503:24;1521:5;1503:24;:::i;:::-;1498:3;1491:37;1481:53;;:::o;1540:115::-;1625:23;1642:5;1625:23;:::i;:::-;1620:3;1613:36;1603:52;;:::o;1661:112::-;1744:22;1760:5;1744:22;:::i;:::-;1739:3;1732:35;1722:51;;:::o;1779:222::-;1872:4;1910:2;1899:9;1895:18;1887:26;;1923:71;1991:1;1980:9;1976:17;1967:6;1923:71;:::i;:::-;1877:124;;;;:::o;2007:210::-;2094:4;2132:2;2121:9;2117:18;2109:26;;2145:65;2207:1;2196:9;2192:17;2183:6;2145:65;:::i;:::-;2099:118;;;;:::o;2223:272::-;2341:4;2379:2;2368:9;2364:18;2356:26;;2392:96;2485:1;2474:9;2470:17;2461:6;2392:96;:::i;:::-;2346:149;;;;:::o;2501:222::-;2594:4;2632:2;2621:9;2617:18;2609:26;;2645:71;2713:1;2702:9;2698:17;2689:6;2645:71;:::i;:::-;2599:124;;;;:::o;2729:218::-;2820:4;2858:2;2847:9;2843:18;2835:26;;2871:69;2937:1;2926:9;2922:17;2913:6;2871:69;:::i;:::-;2825:122;;;;:::o;2953:668::-;3160:4;3198:3;3187:9;3183:19;3175:27;;3212:67;3276:1;3265:9;3261:17;3252:6;3212:67;:::i;:::-;3289:72;3357:2;3346:9;3342:18;3333:6;3289:72;:::i;:::-;3371;3439:2;3428:9;3424:18;3415:6;3371:72;:::i;:::-;3453:82;3531:2;3520:9;3516:18;3507:6;3453:82;:::i;:::-;3545:69;3609:3;3598:9;3594:19;3585:6;3545:69;:::i;:::-;3165:456;;;;;;;;:::o;3627:96::-;3664:7;3693:24;3711:5;3693:24;:::i;:::-;3682:35;;3672:51;;;:::o;3729:90::-;3763:7;3806:5;3799:13;3792:21;3781:32;;3771:48;;;:::o;3825:135::-;3874:7;3903:5;3892:16;;3909:45;3948:5;3909:45;:::i;:::-;3882:78;;;:::o;3966:126::-;4003:7;4043:42;4036:5;4032:54;4021:65;;4011:81;;;:::o;4098:77::-;4135:7;4164:5;4153:16;;4143:32;;;:::o;4181:93::-;4217:7;4257:10;4250:5;4246:22;4235:33;;4225:49;;;:::o;4280:86::-;4315:7;4355:4;4348:5;4344:16;4333:27;;4323:43;;;:::o;4372:176::-;4447:9;4480:62;4536:5;4480:62;:::i;:::-;4467:75;;4457:91;;;:::o;4554:138::-;4629:9;4662:24;4680:5;4662:24;:::i;:::-;4649:37;;4639:53;;;:::o;4698:135::-;4758:9;4791:36;4821:5;4791:36;:::i;:::-;4778:49;;4768:65;;;:::o;4839:180::-;4887:77;4884:1;4877:88;4984:4;4981:1;4974:15;5008:4;5005:1;4998:15;5025:118;5110:2;5103:5;5100:13;5090:2;;5117:18;;:::i;:::-;5090:2;5080:63;:::o;5149:122::-;5222:24;5240:5;5222:24;:::i;:::-;5215:5;5212:35;5202:2;;5261:1;5258;5251:12;5202:2;5192:79;:::o;5277:122::-;5350:24;5368:5;5350:24;:::i;:::-;5343:5;5340:35;5330:2;;5389:1;5386;5379:12;5330:2;5320:79;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.4;\nimport \"./AnimalControl.sol\";\nimport \"./animals.sol\";\nimport \"./SaleClockAuction.sol\";\n\ncontract AnimalBase is AnimalControl {\n\n    /// @dev The Birth event is fired whenever a new kitten comes into existence. This obviously\n    ///  includes any time a animal is created through the giveBirth method, but it is also called\n    ///  when a new gen0 animal is created.\n    event Birth(\n        address owner,\n        uint256 animalId,\n        uint256 matronId,\n        uint256 sireId,\n        Species species,\n        uint8 genes,\n        uint8 generation\n    );\n\n    /// @dev Transfer event as defined in current draft of ERC721. Emitted every time a kitten\n    ///  ownership is assigned, including births.\n    // event Transfer(address from, address to, uint256 tokenId);    \n\n\n    struct Animal {\n        uint8 genes;\n        uint256 matronId;\n        uint256 sireId;\n        Species species;\n        uint8 generation;\n    }\n\n    /// @dev A lookup table indianimaling the cooldown duration after any successful\n    ///  breeding action, called \"pregnancy time\" for matrons and \"siring cooldown\"\n    ///  for sires. Designed such that the cooldown roughly doubles each time a animal\n    ///  is bred, encouraging owners not to just keep breeding the same animal over\n    ///  and over again. Caps out at one week (a animal can breed an unbounded number\n    ///  of times, and the maximum cooldown is always seven days).\n    uint32[14] public cooldowns = [\n        uint32(4 hours),\n        uint32(1 days),\n        uint32(3 days),\n        uint32(7 days),\n        uint32(30 days)\n    ];\n\n    // An approximation of currently how many seconds are in between blocks.\n    uint256 public secondsPerBlock = 15;\n\n    // list of existing animals\n    Animal[] public animals;\n\n    /// @dev A mapping from animal IDs to the address that owns them. All animals have\n    ///  some valid owner address, even gen0 animals are created with a non-zero owner.\n    mapping (uint256 => address) public animalIndexToOwner;\n\n    // @dev A mapping from owner address to count of tokens that address owns.\n    //  Used internally inside balanceOf() to resolve ownership count.\n    mapping (address => uint256) ownershipTokenCount;\n\n    /// @dev A mapping from AddressIDs to an address that has been approved to call\n    ///  transferFrom(). Each Address can only have one approved address for transfer\n    ///  at any time. A zero value means no approval is outstanding.\n    mapping (uint256 => address) public animalIndexToApproved;\n\n    /// @dev A mapping from AddressIDs to an address that has been approved to use\n    ///  this Address for siring via breedWith(). Each Address can only have one approved\n    ///  address for siring at any time. A zero value means no approval is outstanding.\n    mapping (uint256 => address) public sireAllowedToAddress;    \n\n    /// @dev The address of the ClockAuction contract that handles sales of Kitties. This\n    ///  same contract handles both peer-to-peer sales as well as the gen0 sales which are\n    ///  initiated every 15 minutes.\n    SaleClockAuction public saleAuction;\n}",
  "sourcePath": "E:/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/AnimalBase.sol",
  "ast": {
    "absolutePath": "/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/AnimalBase.sol",
    "exportedSymbols": {
      "Address": [
        2710
      ],
      "AnimalBase": [
        93
      ],
      "AnimalControl": [
        273
      ],
      "ClockAuction": [
        598
      ],
      "ClockAuctionBase": [
        1006
      ],
      "Context": [
        2733
      ],
      "ERC165": [
        2960
      ],
      "ERC721": [
        2253
      ],
      "IERC165": [
        2972
      ],
      "IERC721": [
        2369
      ],
      "IERC721Metadata": [
        2414
      ],
      "IERC721Receiver": [
        2387
      ],
      "Ownable": [
        1343
      ],
      "Pausable": [
        1435
      ],
      "SaleClockAuction": [
        1213
      ],
      "Species": [
        1233
      ],
      "Strings": [
        2936
      ]
    },
    "id": 94,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "absolutePath": "/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/AnimalControl.sol",
        "file": "./AnimalControl.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 274,
        "src": "63:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/animals.sol",
        "file": "./animals.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1234,
        "src": "93:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/SaleClockAuction.sol",
        "file": "./SaleClockAuction.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1214,
        "src": "117:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "AnimalControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 273,
              "src": "174:13:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "174:13:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 93,
        "linearizedBaseContracts": [
          93,
          273
        ],
        "name": "AnimalBase",
        "nameLocation": "160:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 7,
              "nodeType": "StructuredDocumentation",
              "src": "195:235:0",
              "text": "@dev The Birth event is fired whenever a new kitten comes into existence. This obviously\n  includes any time a animal is created through the giveBirth method, but it is also called\n  when a new gen0 animal is created."
            },
            "id": 24,
            "name": "Birth",
            "nameLocation": "441:5:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "464:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "456:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "animalId",
                  "nameLocation": "487:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "479:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "matronId",
                  "nameLocation": "513:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "505:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sireId",
                  "nameLocation": "539:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "531:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "species",
                  "nameLocation": "563:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "555:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Species_$1233",
                    "typeString": "enum Species"
                  },
                  "typeName": {
                    "id": 17,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16,
                      "name": "Species",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1233,
                      "src": "555:7:0"
                    },
                    "referencedDeclaration": 1233,
                    "src": "555:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Species_$1233",
                      "typeString": "enum Species"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "genes",
                  "nameLocation": "586:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "580:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "generation",
                  "nameLocation": "607:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "601:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "446:177:0"
            },
            "src": "435:189:0"
          },
          {
            "canonicalName": "AnimalBase.Animal",
            "id": 36,
            "members": [
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "genes",
                "nameLocation": "877:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "871:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "871:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "matronId",
                "nameLocation": "900:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "892:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "892:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "sireId",
                "nameLocation": "926:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "918:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "918:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "species",
                "nameLocation": "950:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "942:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Species_$1233",
                  "typeString": "enum Species"
                },
                "typeName": {
                  "id": 32,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 31,
                    "name": "Species",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1233,
                    "src": "942:7:0"
                  },
                  "referencedDeclaration": 1233,
                  "src": "942:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Species_$1233",
                    "typeString": "enum Species"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "generation",
                "nameLocation": "973:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "967:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 34,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Animal",
            "nameLocation": "854:6:0",
            "nodeType": "StructDefinition",
            "scope": 93,
            "src": "847:143:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 37,
              "nodeType": "StructuredDocumentation",
              "src": "996:488:0",
              "text": "@dev A lookup table indianimaling the cooldown duration after any successful\n  breeding action, called \"pregnancy time\" for matrons and \"siring cooldown\"\n  for sires. Designed such that the cooldown roughly doubles each time a animal\n  is bred, encouraging owners not to just keep breeding the same animal over\n  and over again. Caps out at one week (a animal can breed an unbounded number\n  of times, and the maximum cooldown is always seven days)."
            },
            "functionSelector": "9d6fac6f",
            "id": 62,
            "mutability": "mutable",
            "name": "cooldowns",
            "nameLocation": "1507:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "1489:158:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint32_$14_storage",
              "typeString": "uint32[14]"
            },
            "typeName": {
              "baseType": {
                "id": 38,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1489:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "id": 40,
              "length": {
                "hexValue": "3134",
                "id": 39,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1496:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_14_by_1",
                  "typeString": "int_const 14"
                },
                "value": "14"
              },
              "nodeType": "ArrayTypeName",
              "src": "1489:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$14_storage_ptr",
                "typeString": "uint32[14]"
              }
            },
            "value": {
              "components": [
                {
                  "arguments": [
                    {
                      "hexValue": "34",
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1536:7:0",
                      "subdenomination": "hours",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_14400_by_1",
                        "typeString": "int_const 14400"
                      },
                      "value": "4"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_14400_by_1",
                        "typeString": "int_const 14400"
                      }
                    ],
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1529:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 41,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1529:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 44,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1529:15:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "31",
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1561:6:0",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      }
                    ],
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1554:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 45,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1554:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 48,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1554:14:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "33",
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1585:6:0",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_259200_by_1",
                        "typeString": "int_const 259200"
                      },
                      "value": "3"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_259200_by_1",
                        "typeString": "int_const 259200"
                      }
                    ],
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1578:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 49,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1578:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 52,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1578:14:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "37",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1609:6:0",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_604800_by_1",
                        "typeString": "int_const 604800"
                      },
                      "value": "7"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_604800_by_1",
                        "typeString": "int_const 604800"
                      }
                    ],
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1602:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 53,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1602:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 56,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1602:14:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "3330",
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1633:7:0",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2592000_by_1",
                        "typeString": "int_const 2592000"
                      },
                      "value": "30"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_2592000_by_1",
                        "typeString": "int_const 2592000"
                      }
                    ],
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1626:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 57,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1626:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 60,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1626:15:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                }
              ],
              "id": 61,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "1519:128:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$5_memory_ptr",
                "typeString": "uint32[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7a7d4937",
            "id": 65,
            "mutability": "mutable",
            "name": "secondsPerBlock",
            "nameLocation": "1746:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "1731:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1731:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3135",
              "id": 64,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1764:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15_by_1",
                "typeString": "int_const 15"
              },
              "value": "15"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "998dd3ca",
            "id": 69,
            "mutability": "mutable",
            "name": "animals",
            "nameLocation": "1821:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "1805:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Animal_$36_storage_$dyn_storage",
              "typeString": "struct AnimalBase.Animal[]"
            },
            "typeName": {
              "baseType": {
                "id": 67,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66,
                  "name": "Animal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36,
                  "src": "1805:6:0"
                },
                "referencedDeclaration": 36,
                "src": "1805:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Animal_$36_storage_ptr",
                  "typeString": "struct AnimalBase.Animal"
                }
              },
              "id": 68,
              "nodeType": "ArrayTypeName",
              "src": "1805:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Animal_$36_storage_$dyn_storage_ptr",
                "typeString": "struct AnimalBase.Animal[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 70,
              "nodeType": "StructuredDocumentation",
              "src": "1835:170:0",
              "text": "@dev A mapping from animal IDs to the address that owns them. All animals have\n  some valid owner address, even gen0 animals are created with a non-zero owner."
            },
            "functionSelector": "98cf8ae6",
            "id": 74,
            "mutability": "mutable",
            "name": "animalIndexToOwner",
            "nameLocation": "2046:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "2010:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2019:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2010:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2030:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "ownershipTokenCount",
            "nameLocation": "2250:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "2221:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2221:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2241:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "2276:234:0",
              "text": "@dev A mapping from AddressIDs to an address that has been approved to call\n  transferFrom(). Each Address can only have one approved address for transfer\n  at any time. A zero value means no approval is outstanding."
            },
            "functionSelector": "b2c07292",
            "id": 83,
            "mutability": "mutable",
            "name": "animalIndexToApproved",
            "nameLocation": "2551:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "2515:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 80,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2524:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2515:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 81,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2535:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "2579:256:0",
              "text": "@dev A mapping from AddressIDs to an address that has been approved to use\n  this Address for siring via breedWith(). Each Address can only have one approved\n  address for siring at any time. A zero value means no approval is outstanding."
            },
            "functionSelector": "46116e6f",
            "id": 88,
            "mutability": "mutable",
            "name": "sireAllowedToAddress",
            "nameLocation": "2876:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "2840:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 87,
              "keyType": {
                "id": 85,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2849:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2840:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 86,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2860:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "2907:213:0",
              "text": "@dev The address of the ClockAuction contract that handles sales of Kitties. This\n  same contract handles both peer-to-peer sales as well as the gen0 sales which are\n  initiated every 15 minutes."
            },
            "functionSelector": "e6cbe351",
            "id": 92,
            "mutability": "mutable",
            "name": "saleAuction",
            "nameLocation": "3149:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "3125:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SaleClockAuction_$1213",
              "typeString": "contract SaleClockAuction"
            },
            "typeName": {
              "id": 91,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 90,
                "name": "SaleClockAuction",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1213,
                "src": "3125:16:0"
              },
              "referencedDeclaration": 1213,
              "src": "3125:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SaleClockAuction_$1213",
                "typeString": "contract SaleClockAuction"
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 94,
        "src": "151:3012:0",
        "usedErrors": []
      }
    ],
    "src": "39:3124:0"
  },
  "legacyAST": {
    "absolutePath": "/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/AnimalBase.sol",
    "exportedSymbols": {
      "Address": [
        2710
      ],
      "AnimalBase": [
        93
      ],
      "AnimalControl": [
        273
      ],
      "ClockAuction": [
        598
      ],
      "ClockAuctionBase": [
        1006
      ],
      "Context": [
        2733
      ],
      "ERC165": [
        2960
      ],
      "ERC721": [
        2253
      ],
      "IERC165": [
        2972
      ],
      "IERC721": [
        2369
      ],
      "IERC721Metadata": [
        2414
      ],
      "IERC721Receiver": [
        2387
      ],
      "Ownable": [
        1343
      ],
      "Pausable": [
        1435
      ],
      "SaleClockAuction": [
        1213
      ],
      "Species": [
        1233
      ],
      "Strings": [
        2936
      ]
    },
    "id": 94,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "absolutePath": "/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/AnimalControl.sol",
        "file": "./AnimalControl.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 274,
        "src": "63:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/animals.sol",
        "file": "./animals.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1234,
        "src": "93:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/general_work/upwork/202105/CryptoZoo-NFT3-main/contracts/SaleClockAuction.sol",
        "file": "./SaleClockAuction.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1214,
        "src": "117:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "AnimalControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 273,
              "src": "174:13:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "174:13:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 93,
        "linearizedBaseContracts": [
          93,
          273
        ],
        "name": "AnimalBase",
        "nameLocation": "160:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 7,
              "nodeType": "StructuredDocumentation",
              "src": "195:235:0",
              "text": "@dev The Birth event is fired whenever a new kitten comes into existence. This obviously\n  includes any time a animal is created through the giveBirth method, but it is also called\n  when a new gen0 animal is created."
            },
            "id": 24,
            "name": "Birth",
            "nameLocation": "441:5:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "464:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "456:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "animalId",
                  "nameLocation": "487:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "479:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "matronId",
                  "nameLocation": "513:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "505:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sireId",
                  "nameLocation": "539:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "531:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "species",
                  "nameLocation": "563:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "555:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Species_$1233",
                    "typeString": "enum Species"
                  },
                  "typeName": {
                    "id": 17,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16,
                      "name": "Species",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1233,
                      "src": "555:7:0"
                    },
                    "referencedDeclaration": 1233,
                    "src": "555:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Species_$1233",
                      "typeString": "enum Species"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "genes",
                  "nameLocation": "586:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "580:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "generation",
                  "nameLocation": "607:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "601:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "446:177:0"
            },
            "src": "435:189:0"
          },
          {
            "canonicalName": "AnimalBase.Animal",
            "id": 36,
            "members": [
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "genes",
                "nameLocation": "877:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "871:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "871:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "matronId",
                "nameLocation": "900:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "892:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "892:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "sireId",
                "nameLocation": "926:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "918:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "918:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "species",
                "nameLocation": "950:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "942:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Species_$1233",
                  "typeString": "enum Species"
                },
                "typeName": {
                  "id": 32,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 31,
                    "name": "Species",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1233,
                    "src": "942:7:0"
                  },
                  "referencedDeclaration": 1233,
                  "src": "942:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Species_$1233",
                    "typeString": "enum Species"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "generation",
                "nameLocation": "973:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "967:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 34,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Animal",
            "nameLocation": "854:6:0",
            "nodeType": "StructDefinition",
            "scope": 93,
            "src": "847:143:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 37,
              "nodeType": "StructuredDocumentation",
              "src": "996:488:0",
              "text": "@dev A lookup table indianimaling the cooldown duration after any successful\n  breeding action, called \"pregnancy time\" for matrons and \"siring cooldown\"\n  for sires. Designed such that the cooldown roughly doubles each time a animal\n  is bred, encouraging owners not to just keep breeding the same animal over\n  and over again. Caps out at one week (a animal can breed an unbounded number\n  of times, and the maximum cooldown is always seven days)."
            },
            "functionSelector": "9d6fac6f",
            "id": 62,
            "mutability": "mutable",
            "name": "cooldowns",
            "nameLocation": "1507:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "1489:158:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint32_$14_storage",
              "typeString": "uint32[14]"
            },
            "typeName": {
              "baseType": {
                "id": 38,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1489:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "id": 40,
              "length": {
                "hexValue": "3134",
                "id": 39,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1496:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_14_by_1",
                  "typeString": "int_const 14"
                },
                "value": "14"
              },
              "nodeType": "ArrayTypeName",
              "src": "1489:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$14_storage_ptr",
                "typeString": "uint32[14]"
              }
            },
            "value": {
              "components": [
                {
                  "arguments": [
                    {
                      "hexValue": "34",
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1536:7:0",
                      "subdenomination": "hours",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_14400_by_1",
                        "typeString": "int_const 14400"
                      },
                      "value": "4"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_14400_by_1",
                        "typeString": "int_const 14400"
                      }
                    ],
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1529:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 41,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1529:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 44,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1529:15:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "31",
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1561:6:0",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      }
                    ],
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1554:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 45,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1554:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 48,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1554:14:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "33",
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1585:6:0",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_259200_by_1",
                        "typeString": "int_const 259200"
                      },
                      "value": "3"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_259200_by_1",
                        "typeString": "int_const 259200"
                      }
                    ],
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1578:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 49,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1578:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 52,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1578:14:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "37",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1609:6:0",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_604800_by_1",
                        "typeString": "int_const 604800"
                      },
                      "value": "7"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_604800_by_1",
                        "typeString": "int_const 604800"
                      }
                    ],
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1602:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 53,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1602:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 56,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1602:14:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "3330",
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1633:7:0",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2592000_by_1",
                        "typeString": "int_const 2592000"
                      },
                      "value": "30"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_2592000_by_1",
                        "typeString": "int_const 2592000"
                      }
                    ],
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1626:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint32_$",
                      "typeString": "type(uint32)"
                    },
                    "typeName": {
                      "id": 57,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1626:6:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 60,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1626:15:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                }
              ],
              "id": 61,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "1519:128:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$5_memory_ptr",
                "typeString": "uint32[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7a7d4937",
            "id": 65,
            "mutability": "mutable",
            "name": "secondsPerBlock",
            "nameLocation": "1746:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "1731:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1731:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3135",
              "id": 64,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1764:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15_by_1",
                "typeString": "int_const 15"
              },
              "value": "15"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "998dd3ca",
            "id": 69,
            "mutability": "mutable",
            "name": "animals",
            "nameLocation": "1821:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "1805:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Animal_$36_storage_$dyn_storage",
              "typeString": "struct AnimalBase.Animal[]"
            },
            "typeName": {
              "baseType": {
                "id": 67,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66,
                  "name": "Animal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36,
                  "src": "1805:6:0"
                },
                "referencedDeclaration": 36,
                "src": "1805:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Animal_$36_storage_ptr",
                  "typeString": "struct AnimalBase.Animal"
                }
              },
              "id": 68,
              "nodeType": "ArrayTypeName",
              "src": "1805:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Animal_$36_storage_$dyn_storage_ptr",
                "typeString": "struct AnimalBase.Animal[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 70,
              "nodeType": "StructuredDocumentation",
              "src": "1835:170:0",
              "text": "@dev A mapping from animal IDs to the address that owns them. All animals have\n  some valid owner address, even gen0 animals are created with a non-zero owner."
            },
            "functionSelector": "98cf8ae6",
            "id": 74,
            "mutability": "mutable",
            "name": "animalIndexToOwner",
            "nameLocation": "2046:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "2010:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2019:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2010:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2030:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "ownershipTokenCount",
            "nameLocation": "2250:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "2221:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2221:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2241:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "2276:234:0",
              "text": "@dev A mapping from AddressIDs to an address that has been approved to call\n  transferFrom(). Each Address can only have one approved address for transfer\n  at any time. A zero value means no approval is outstanding."
            },
            "functionSelector": "b2c07292",
            "id": 83,
            "mutability": "mutable",
            "name": "animalIndexToApproved",
            "nameLocation": "2551:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "2515:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 80,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2524:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2515:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 81,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2535:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "2579:256:0",
              "text": "@dev A mapping from AddressIDs to an address that has been approved to use\n  this Address for siring via breedWith(). Each Address can only have one approved\n  address for siring at any time. A zero value means no approval is outstanding."
            },
            "functionSelector": "46116e6f",
            "id": 88,
            "mutability": "mutable",
            "name": "sireAllowedToAddress",
            "nameLocation": "2876:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "2840:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 87,
              "keyType": {
                "id": 85,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2849:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2840:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 86,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2860:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "2907:213:0",
              "text": "@dev The address of the ClockAuction contract that handles sales of Kitties. This\n  same contract handles both peer-to-peer sales as well as the gen0 sales which are\n  initiated every 15 minutes."
            },
            "functionSelector": "e6cbe351",
            "id": 92,
            "mutability": "mutable",
            "name": "saleAuction",
            "nameLocation": "3149:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "3125:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SaleClockAuction_$1213",
              "typeString": "contract SaleClockAuction"
            },
            "typeName": {
              "id": 91,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 90,
                "name": "SaleClockAuction",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1213,
                "src": "3125:16:0"
              },
              "referencedDeclaration": 1213,
              "src": "3125:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SaleClockAuction_$1213",
                "typeString": "contract SaleClockAuction"
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 94,
        "src": "151:3012:0",
        "usedErrors": []
      }
    ],
    "src": "39:3124:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-06T01:59:29.789Z",
  "devdoc": {
    "events": {
      "Birth(address,uint256,uint256,uint256,uint8,uint8,uint8)": {
        "details": "The Birth event is fired whenever a new kitten comes into existence. This obviously  includes any time a animal is created through the giveBirth method, but it is also called  when a new gen0 animal is created."
      }
    },
    "kind": "dev",
    "methods": {
      "pause()": {
        "details": "Called by any \"C-level\" role to pause the contract. Used only when  a bug or exploit is detected and we need to limit damage."
      },
      "setCEO(address)": {
        "details": "Assigns a new address to act as the CEO. Only available to the current CEO.",
        "params": {
          "_newCEO": "The address of the new CEO"
        }
      },
      "setCFO(address)": {
        "details": "Assigns a new address to act as the CFO. Only available to the current CEO.",
        "params": {
          "_newCFO": "The address of the new CFO"
        }
      },
      "setCOO(address)": {
        "details": "Assigns a new address to act as the COO. Only available to the current CEO.",
        "params": {
          "_newCOO": "The address of the new COO"
        }
      },
      "unpause()": {
        "details": "Unpauses the smart contract. Can only be called by the CEO, since  one reason we may pause the contract is when CFO or COO accounts are  compromised."
      }
    },
    "stateVariables": {
      "animalIndexToApproved": {
        "details": "A mapping from AddressIDs to an address that has been approved to call  transferFrom(). Each Address can only have one approved address for transfer  at any time. A zero value means no approval is outstanding."
      },
      "animalIndexToOwner": {
        "details": "A mapping from animal IDs to the address that owns them. All animals have  some valid owner address, even gen0 animals are created with a non-zero owner."
      },
      "cooldowns": {
        "details": "A lookup table indianimaling the cooldown duration after any successful  breeding action, called \"pregnancy time\" for matrons and \"siring cooldown\"  for sires. Designed such that the cooldown roughly doubles each time a animal  is bred, encouraging owners not to just keep breeding the same animal over  and over again. Caps out at one week (a animal can breed an unbounded number  of times, and the maximum cooldown is always seven days)."
      },
      "saleAuction": {
        "details": "The address of the ClockAuction contract that handles sales of Kitties. This  same contract handles both peer-to-peer sales as well as the gen0 sales which are  initiated every 15 minutes."
      },
      "sireAllowedToAddress": {
        "details": "A mapping from AddressIDs to an address that has been approved to use  this Address for siring via breedWith(). Each Address can only have one approved  address for siring at any time. A zero value means no approval is outstanding."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "version": 1
  }
}